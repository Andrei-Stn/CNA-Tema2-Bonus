// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/summer.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Tema2CNA.Protos {
  public static partial class Summer
  {
    static readonly string __ServiceName = "Summer";

    static readonly grpc::Marshaller<global::Tema2CNA.Protos.SummerRequest> __Marshaller_SummerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tema2CNA.Protos.SummerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Tema2CNA.Protos.SummerResponse> __Marshaller_SummerResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Tema2CNA.Protos.SummerResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Tema2CNA.Protos.SummerRequest, global::Tema2CNA.Protos.SummerResponse> __Method_GetSummerSign = new grpc::Method<global::Tema2CNA.Protos.SummerRequest, global::Tema2CNA.Protos.SummerResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSummerSign",
        __Marshaller_SummerRequest,
        __Marshaller_SummerResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Tema2CNA.Protos.SummerReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Summer</summary>
    [grpc::BindServiceMethod(typeof(Summer), "BindService")]
    public abstract partial class SummerBase
    {
      public virtual global::System.Threading.Tasks.Task<global::Tema2CNA.Protos.SummerResponse> GetSummerSign(global::Tema2CNA.Protos.SummerRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(SummerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetSummerSign, serviceImpl.GetSummerSign).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SummerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetSummerSign, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tema2CNA.Protos.SummerRequest, global::Tema2CNA.Protos.SummerResponse>(serviceImpl.GetSummerSign));
    }

  }
}
#endregion
